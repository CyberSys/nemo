#!/bin/echo Usage: source 
###
###  Standard C-shell setup for NEMO V2.2+ environment:
###
###	1) define the NEMO environment variable 
###	2) source  this file
###	3) optionally add to NEMORC.local and your ~/.nemorc file
###	3) add $NEMOBIN to the search path
###
###  Do not edit this file, instead edit :
###	NEMORC.local        for local site additions,
###     $NEMOLIB/NEMORC     for local architecture additions
###     $HOME/.nemorc       for user additions

# 				try and set NEMO if it didn't exist 
if ($?NEMO == 0) then
  foreach v (/home/nemo /usr/nemo)
    if (-d $v && -e $v/NEMORC) then
      setenv NEMO $v
    endif
  end
  if ($?NEMO == 0) then
    echo "### Fatal error: in NEMORC file: missing environment variable NEMO"
    goto end
  endif
endif

#  				keep users of deprecated NEMOPATH happy
if ($?NEMO == 0 && $?NEMOPATH == 1) then
 echo "### Warning: NEMOPATH deprecated, you should use NEMO instead"
 setenv NEMO $NEMOPATH
 unsetenv NEMOPATH
endif

# 				resolve the hosttype NEMOHOST if not given 
if ($?NEMOHOST == 0) then
   if (-x $NEMO/src/scripts/hosttype) then
   	setenv NEMOHOST `$NEMO/src/scripts/hosttype`
   else
        echo "### Warning: no script $NEMO/src/scripts/hosttype"
        echo "NEMORC: Warning: using unknown NEMOHOST"
	setenv NEMOHOST unknown
   endif
endif

#  				Basic derived environment variables
setenv NEMOLIB $NEMO/lib/$NEMOHOST
setenv NEMOBIN $NEMO/bin/$NEMOHOST
setenv NEMOOBJ $NEMO/obj/$NEMOHOST
setenv NEMODOC $NEMO/man/doc
setenv NEMODAT $NEMO/data
setenv NEMOINC $NEMO/inc
setenv NEMOSRC $NEMO/src
setenv BTRPATH .:$NEMO/obj/$NEMOHOST/bodytrans
setenv POTPATH .:$NEMO/obj/$NEMOHOST/potential
if (-e $NEMO/VERSION) then
  setenv NEMOVER `cat $NEMO/VERSION`
else
  setenv NEMOVER old
endif

#	? Ultrix doesn't handle MANPATH
#	IRIX is also particular about MANPATH
if ($?MANPATH == 0) then
 setenv MANPATH $NEMO/man
 foreach mandir (/usr/man /usr/local/man /local/man /opt/man /opt/SUNWspro/man /usr/openwin/man)
   if (-e $mandir) then
      setenv MANPATH ${MANPATH}:$mandir
   endif
 end
else
 echo $MANPATH | grep -s $NEMO/man  >& /dev/null
 if ($status) setenv MANPATH $NEMO/man:$MANPATH
endif

# FORTRAN:
#
# SUN only: figure out the most recent version of special fortran/cc compilers
# this can be a nightmare.
set lang=()
foreach v (/opt/SUNWspro/{lib,SC4.0,SC3.0.1,SC2.0.1} /usr/lang/{SC2.0.1,SC1.0,SC0.0})
  #echo LANG: Checking $v
  if (-d $v) then
     #echo LANG: Found $v 
     set lang=$v
     break
  endif
end

#	sun 1.3 fortran compiler may need this if f2c used
if ($NEMOHOST == sun3) then
 if ($?FLOAT_OPTION == 0) then
   echo "NEMORC: Warning: setting FLOAT_OPTION to f68881"
   setenv FLOAT_OPTION f68881
 endif
 setenv FPVERSION $FLOAT_OPTION 
else if ($NEMOHOST == sun4) then
 setenv FPVERSION cg89
else if ($NEMOHOST == sun5) then
 setenv FPVERSION cg92
else
 setenv FPVERSION ""
endif

#
# Old sun fortran (1.2 and earlier) compiler, and all other 'standard' Unix f77:
# setenv FORLIBS "-lF77 -lI77 -lU77"
# New sun fortran (1.3 and up) compiler use usr/lang/SCx.y ($lang)
# Next one if for /bin/cc
# setenv FORLIBS "-L$lang -lF77 $lang/$FPVERSION/libm.a $lang/$FPVERSION/_crt1.o"
# Next one for /usr/lang/cc, and a catchall 'old standard'
if ($lang:t == SC2.0.1) then
  setenv FORLIBS "-L$lang -lF77 -lM77 -lV77"
#          add ???  -L$lang/$FPVERSION"
else if ($lang:t == SC1.0) then
  setenv FORLIBS "-L$lang -lF77"
else if (X$lang != X) then
  setenv FORLIBS "-L$lang -lF77 -lM77 -lV77 -lsunmath"
#  setenv FORLIBS "-lF77 -lI77 -lU77"
else
  setenv FORLIBS ""
endif

# X windows: (why do we have both now??)
if ($NEMOHOST == sun5) then
  setenv YAPP_XLIB "-lX11 -lsocket -lnsl"
  setenv NEMOXLIB "-lX11 -lsocket -lnsl"
else
  setenv YAPP_XLIB "-L/usr/X11R6/lib -lX11"
  setenv NEMOXLIB "-L/usr/X11R6/lib -lX11"
endif

# YAPP
if ($?PGPLOT_DIR) then
  setenv YAPP_PGPLOT "$NEMOLIB/yapp_pgplot.o -L$PGPLOT_DIR -Bdynamic -lpgplot $YAPP_XLIB -lm $FORLIBS"
else
  setenv YAPP_PGPLOT "$NEMOLIB/yapp_pgplot.o -Bdynamic -lpgplot $YAPP_XLIB -lm $FORLIBS"
endif
setenv YAPP_PLPLOT "$NEMOLIB/yapp_plplot.o -lplplotfX -lnemo $YAPP_XLIB -lm"
setenv YAPP_MONGO "$NEMOLIB/yapp_mongo.o -Bdynamic -lmongo -lsuntool -lsunwindow -lpixrect -lm $FORLIBS"
setenv YAPP_PS "$NEMOLIB/yapp_ps.o -lm"
setenv YAPP_CORE "$NEMOLIB/yapp_core.o -Bdynamic -lcore -lsunwindow -lpixrect"
setenv YAPP_SV "$NEMOLIB/yapp_sv.o -Bdynamic -lsuntool -lsunwindow -lpixrect"
setenv YAPP_NULL $NEMOLIB/yapp_null.o
setenv YAPP_SM "$NEMOLIB/yapp_sm.o -lplotsub -ldevices -lutils $YAPP_XLIB"
setenv YAPP_X11 "-lyapp_x $YAPP_XLIB"


# Set various 'external' things we sometimes need, but only if not set

if ($?NUMRECLIB == 0)  setenv NUMRECLIB $NEMOLIB/libnumrec.a
if ($?GRAVSIM == 0)    setenv GRAVSIM $NEMO/usr/mbellon/gravsim
if ($?PLPLOT_LIB == 0) setenv PLPLOT_LIB $NEMOLIB

# some useful (?) aliases

alias keys "ls *.def"
if (-e $NEMOBIN/miriad) alias nemo "miriad -b $NEMOBIN -p $NEMODOC -d ."
alias motd 'more $NEMO/etc/motd'
alias lmake 'make -f $NEMOLIB/Makefile.lib'
alias omake 'make -f $NEMOLIB/Makefile.obj'
alias bake  'make -f $NEMOLIB/Makefile.lib'
alias Test  'make -f Testfile'


# Required dummy defaults that should be overriden in NEMORC.local
setenv YAPPLIB $YAPP_NULL
setenv NEMOSITE unknown


#       this is where site dependancies reside (see template in: NEMORC.gen)
if (-e $NEMO/NEMORC.local) then
    source $NEMO/NEMORC.local
else
    source $NEMO/NEMORC.gen
endif

#	this is where the site manager can hide architecture dependant things
if (-e $NEMOLIB/NEMORC) source $NEMOLIB/NEMORC

#	this is where each user can hide its own things
if ($?HOME) then
  if (-e $HOME/.nemorc) source $HOME/.nemorc
endif

# unset local shell variables
unset lang
unset v

end:
